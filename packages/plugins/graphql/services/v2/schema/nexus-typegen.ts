/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
    /**
     * A time string with format HH:mm:ss.SSS
     */
    time<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Time";
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Date";
    /**
     * The `Long` scalar type represents 52-bit integers
     */
    long<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Long";
    /**
     * The `Upload` scalar type represents a file upload.
     */
    upload<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Upload";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    dateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
    /**
     * A time string with format HH:mm:ss.SSS
     */
    time<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Time";
    /**
     * A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
    /**
     * The `Long` scalar type represents 52-bit integers
     */
    long<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Long";
    /**
     * The `Upload` scalar type represents a file upload.
     */
    upload<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Upload";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AddressFiltersInput: { // input type
    AND?: Array<NexusGenInputs['AddressFiltersInput'] | null> | null; // [AddressFiltersInput]
    NOT?: NexusGenInputs['AddressFiltersInput'] | null; // AddressFiltersInput
    OR?: Array<NexusGenInputs['AddressFiltersInput'] | null> | null; // [AddressFiltersInput]
    city?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    cover?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    json?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    postal_coder?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  AdminPermissionFiltersInput: { // input type
    AND?: Array<NexusGenInputs['AdminPermissionFiltersInput'] | null> | null; // [AdminPermissionFiltersInput]
    NOT?: NexusGenInputs['AdminPermissionFiltersInput'] | null; // AdminPermissionFiltersInput
    OR?: Array<NexusGenInputs['AdminPermissionFiltersInput'] | null> | null; // [AdminPermissionFiltersInput]
    action?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    conditions?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    properties?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    role?: NexusGenInputs['AdminRoleFiltersInput'] | null; // AdminRoleFiltersInput
    subject?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  AdminRoleFiltersInput: { // input type
    AND?: Array<NexusGenInputs['AdminRoleFiltersInput'] | null> | null; // [AdminRoleFiltersInput]
    NOT?: NexusGenInputs['AdminRoleFiltersInput'] | null; // AdminRoleFiltersInput
    OR?: Array<NexusGenInputs['AdminRoleFiltersInput'] | null> | null; // [AdminRoleFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  AdminUserFiltersInput: { // input type
    AND?: Array<NexusGenInputs['AdminUserFiltersInput'] | null> | null; // [AdminUserFiltersInput]
    NOT?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    OR?: Array<NexusGenInputs['AdminUserFiltersInput'] | null> | null; // [AdminUserFiltersInput]
    blocked?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    firstname?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    isActive?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    lastname?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    preferedLanguage?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    registrationToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    resetPasswordToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    username?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  BooleanFilterInput: { // input type
    eq?: boolean | null; // Boolean
  }
  CategoryFiltersInput: { // input type
    AND?: Array<NexusGenInputs['CategoryFiltersInput'] | null> | null; // [CategoryFiltersInput]
    NOT?: NexusGenInputs['CategoryFiltersInput'] | null; // CategoryFiltersInput
    OR?: Array<NexusGenInputs['CategoryFiltersInput'] | null> | null; // [CategoryFiltersInput]
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    published_at?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  ClosingperiodFiltersInput: { // input type
    AND?: Array<NexusGenInputs['ClosingperiodFiltersInput'] | null> | null; // [ClosingperiodFiltersInput]
    NOT?: NexusGenInputs['ClosingperiodFiltersInput'] | null; // ClosingperiodFiltersInput
    OR?: Array<NexusGenInputs['ClosingperiodFiltersInput'] | null> | null; // [ClosingperiodFiltersInput]
    end_date?: NexusGenInputs['DateFilterInput'] | null; // DateFilterInput
    label?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    media?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    start_date?: NexusGenInputs['DateFilterInput'] | null; // DateFilterInput
  }
  CountryFiltersInput: { // input type
    AND?: Array<NexusGenInputs['CountryFiltersInput'] | null> | null; // [CountryFiltersInput]
    NOT?: NexusGenInputs['CountryFiltersInput'] | null; // CountryFiltersInput
    OR?: Array<NexusGenInputs['CountryFiltersInput'] | null> | null; // [CountryFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  DateFilterInput: { // input type
    eq?: NexusGenScalars['Date'] | null; // Date
    gt?: NexusGenScalars['Date'] | null; // Date
    lt?: NexusGenScalars['Date'] | null; // Date
  }
  DateTimeFilterInput: { // input type
    eq?: NexusGenScalars['DateTime'] | null; // DateTime
    gt?: NexusGenScalars['DateTime'] | null; // DateTime
    lt?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  DishFiltersInput: { // input type
    AND?: Array<NexusGenInputs['DishFiltersInput'] | null> | null; // [DishFiltersInput]
    NOT?: NexusGenInputs['DishFiltersInput'] | null; // DishFiltersInput
    OR?: Array<NexusGenInputs['DishFiltersInput'] | null> | null; // [DishFiltersInput]
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    picture?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    price?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
  }
  FloatFilterInput: { // input type
    eq?: number | null; // Float
    gt?: number | null; // Float
    lt?: number | null; // Float
  }
  HomepageFiltersInput: { // input type
    AND?: Array<NexusGenInputs['HomepageFiltersInput'] | null> | null; // [HomepageFiltersInput]
    NOT?: NexusGenInputs['HomepageFiltersInput'] | null; // HomepageFiltersInput
    OR?: Array<NexusGenInputs['HomepageFiltersInput'] | null> | null; // [HomepageFiltersInput]
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    locale?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    published_at?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    single?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    title?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  I18NLocaleFiltersInput: { // input type
    AND?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    NOT?: NexusGenInputs['I18NLocaleFiltersInput'] | null; // I18NLocaleFiltersInput
    OR?: Array<NexusGenInputs['I18NLocaleFiltersInput'] | null> | null; // [I18NLocaleFiltersInput]
    code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  IDFilterInput: { // input type
    eq?: string | null; // ID
  }
  IntFilterInput: { // input type
    eq?: number | null; // Int
    gt?: number | null; // Int
    lt?: number | null; // Int
  }
  JSONFilterInput: { // input type
    eq?: NexusGenScalars['JSON'] | null; // JSON
  }
  LikeFiltersInput: { // input type
    AND?: Array<NexusGenInputs['LikeFiltersInput'] | null> | null; // [LikeFiltersInput]
    NOT?: NexusGenInputs['LikeFiltersInput'] | null; // LikeFiltersInput
    OR?: Array<NexusGenInputs['LikeFiltersInput'] | null> | null; // [LikeFiltersInput]
    address?: NexusGenInputs['AddressFiltersInput'] | null; // AddressFiltersInput
    authore?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    review?: NexusGenInputs['ReviewFiltersInput'] | null; // ReviewFiltersInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  LongFilterInput: { // input type
    eq?: NexusGenScalars['Long'] | null; // Long
    gt?: NexusGenScalars['Long'] | null; // Long
    lt?: NexusGenScalars['Long'] | null; // Long
  }
  MenuFiltersInput: { // input type
    AND?: Array<NexusGenInputs['MenuFiltersInput'] | null> | null; // [MenuFiltersInput]
    NOT?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
    OR?: Array<NexusGenInputs['MenuFiltersInput'] | null> | null; // [MenuFiltersInput]
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    restaurant?: NexusGenInputs['RestaurantFiltersInput'] | null; // RestaurantFiltersInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  MenusectionFiltersInput: { // input type
    AND?: Array<NexusGenInputs['MenusectionFiltersInput'] | null> | null; // [MenusectionFiltersInput]
    NOT?: NexusGenInputs['MenusectionFiltersInput'] | null; // MenusectionFiltersInput
    OR?: Array<NexusGenInputs['MenusectionFiltersInput'] | null> | null; // [MenusectionFiltersInput]
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    menu?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  MypluginTestFiltersInput: { // input type
    AND?: Array<NexusGenInputs['MypluginTestFiltersInput'] | null> | null; // [MypluginTestFiltersInput]
    NOT?: NexusGenInputs['MypluginTestFiltersInput'] | null; // MypluginTestFiltersInput
    OR?: Array<NexusGenInputs['MypluginTestFiltersInput'] | null> | null; // [MypluginTestFiltersInput]
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  OpeningtimeFiltersInput: { // input type
    AND?: Array<NexusGenInputs['OpeningtimeFiltersInput'] | null> | null; // [OpeningtimeFiltersInput]
    NOT?: NexusGenInputs['OpeningtimeFiltersInput'] | null; // OpeningtimeFiltersInput
    OR?: Array<NexusGenInputs['OpeningtimeFiltersInput'] | null> | null; // [OpeningtimeFiltersInput]
    label?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    time?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  RestaurantFiltersInput: { // input type
    AND?: Array<NexusGenInputs['RestaurantFiltersInput'] | null> | null; // [RestaurantFiltersInput]
    NOT?: NexusGenInputs['RestaurantFiltersInput'] | null; // RestaurantFiltersInput
    OR?: Array<NexusGenInputs['RestaurantFiltersInput'] | null> | null; // [RestaurantFiltersInput]
    address?: NexusGenInputs['AddressFiltersInput'] | null; // AddressFiltersInput
    averagePrice?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    cover?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    locale?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    menu?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    published_at?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    since?: NexusGenInputs['DateFilterInput'] | null; // DateFilterInput
    stars?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    timestamp?: NexusGenInputs['DateTimeFilterInput'] | null; // DateTimeFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  RestaurantserviceFiltersInput: { // input type
    AND?: Array<NexusGenInputs['RestaurantserviceFiltersInput'] | null> | null; // [RestaurantserviceFiltersInput]
    NOT?: NexusGenInputs['RestaurantserviceFiltersInput'] | null; // RestaurantserviceFiltersInput
    OR?: Array<NexusGenInputs['RestaurantserviceFiltersInput'] | null> | null; // [RestaurantserviceFiltersInput]
    is_available?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    media?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  ReviewFiltersInput: { // input type
    AND?: Array<NexusGenInputs['ReviewFiltersInput'] | null> | null; // [ReviewFiltersInput]
    NOT?: NexusGenInputs['ReviewFiltersInput'] | null; // ReviewFiltersInput
    OR?: Array<NexusGenInputs['ReviewFiltersInput'] | null> | null; // [ReviewFiltersInput]
    author?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    rating?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    restaurant?: NexusGenInputs['RestaurantFiltersInput'] | null; // RestaurantFiltersInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  StringFilterInput: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    eq?: string | null; // String
    startsWith?: string | null; // String
  }
  TestComoFiltersInput: { // input type
    AND?: Array<NexusGenInputs['TestComoFiltersInput'] | null> | null; // [TestComoFiltersInput]
    NOT?: NexusGenInputs['TestComoFiltersInput'] | null; // TestComoFiltersInput
    OR?: Array<NexusGenInputs['TestComoFiltersInput'] | null> | null; // [TestComoFiltersInput]
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
  TimeFilterInput: { // input type
    eq?: NexusGenScalars['Time'] | null; // Time
    gt?: NexusGenScalars['Time'] | null; // Time
    lt?: NexusGenScalars['Time'] | null; // Time
  }
  UploadFileFiltersInput: { // input type
    AND?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    NOT?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    OR?: Array<NexusGenInputs['UploadFileFiltersInput'] | null> | null; // [UploadFileFiltersInput]
    alternativeText?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    caption?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    ext?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    formats?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    hash?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    height?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
    mime?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    previewUrl?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    provider_metadata?: NexusGenInputs['JSONFilterInput'] | null; // JSONFilterInput
    size?: NexusGenInputs['FloatFilterInput'] | null; // FloatFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    url?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    width?: NexusGenInputs['IntFilterInput'] | null; // IntFilterInput
  }
  UsersPermissionsPermissionFiltersInput: { // input type
    AND?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    NOT?: NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null; // UsersPermissionsPermissionFiltersInput
    OR?: Array<NexusGenInputs['UsersPermissionsPermissionFiltersInput'] | null> | null; // [UsersPermissionsPermissionFiltersInput]
    action?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    controller?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    enabled?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    policy?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  UsersPermissionsRoleFiltersInput: { // input type
    AND?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    NOT?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    OR?: Array<NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null> | null; // [UsersPermissionsRoleFiltersInput]
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    description?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    name?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
  }
  UsersPermissionsUserFiltersInput: { // input type
    AND?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    NOT?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
    OR?: Array<NexusGenInputs['UsersPermissionsUserFiltersInput'] | null> | null; // [UsersPermissionsUserFiltersInput]
    blocked?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    confirmationToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    confirmed?: NexusGenInputs['BooleanFilterInput'] | null; // BooleanFilterInput
    created_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    picture?: NexusGenInputs['UploadFileFiltersInput'] | null; // UploadFileFiltersInput
    provider?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    resetPasswordToken?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    role?: NexusGenInputs['UsersPermissionsRoleFiltersInput'] | null; // UsersPermissionsRoleFiltersInput
    updated_by?: NexusGenInputs['AdminUserFiltersInput'] | null; // AdminUserFiltersInput
    username?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
  }
}

export interface NexusGenEnums {
  ENUM_RESTAURANT_PRICE_RANGE: "average" | "cheap" | "expensive" | "very_cheap" | "very_expensive"
  PublicationState: "live" | "preview"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  Date: any
  DateTime: any
  JSON: any
  JSONObject: any
  Long: any
  Time: any
  Upload: any
  restaurantDzDynamicZoneInput: any
}

export interface NexusGenObjects {
  Address: { // root type
    _id: string; // ID!
    city: string; // String!
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    json?: NexusGenScalars['JSON'] | null; // JSON
    postal_coder?: string | null; // String
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  AddressEntity: { // root type
    attributes?: NexusGenRootTypes['Address'] | null; // Address
    id?: string | null; // ID
  }
  AddressEntityResponse: { // root type
    data?: NexusGenRootTypes['AddressEntity'] | null; // AddressEntity
  }
  AddressEntityResponseCollection: { // root type
    data: NexusGenRootTypes['AddressEntity'][]; // [AddressEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  AdminPermission: { // root type
    _id: string; // ID!
    action: string; // String!
    conditions?: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    properties?: NexusGenScalars['JSON'] | null; // JSON
    subject?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AdminPermissionEntity: { // root type
    attributes?: NexusGenRootTypes['AdminPermission'] | null; // AdminPermission
    id?: string | null; // ID
  }
  AdminPermissionEntityResponse: { // root type
    data?: NexusGenRootTypes['AdminPermissionEntity'] | null; // AdminPermissionEntity
  }
  AdminPermissionEntityResponseCollection: { // root type
    data: NexusGenRootTypes['AdminPermissionEntity'][]; // [AdminPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  AdminRole: { // root type
    _id: string; // ID!
    code: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description?: string | null; // String
    id: string; // ID!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AdminRoleEntity: { // root type
    attributes?: NexusGenRootTypes['AdminRole'] | null; // AdminRole
    id?: string | null; // ID
  }
  AdminRoleEntityResponse: { // root type
    data?: NexusGenRootTypes['AdminRoleEntity'] | null; // AdminRoleEntity
  }
  AdminRoleEntityResponseCollection: { // root type
    data: NexusGenRootTypes['AdminRoleEntity'][]; // [AdminRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  AdminUser: { // root type
    _id: string; // ID!
    firstname?: string | null; // String
    id: string; // ID!
    lastname?: string | null; // String
    preferedLanguage?: string | null; // String
    username?: string | null; // String
  }
  AdminUserEntity: { // root type
    attributes?: NexusGenRootTypes['AdminUser'] | null; // AdminUser
    id?: string | null; // ID
  }
  AdminUserEntityResponse: { // root type
    data?: NexusGenRootTypes['AdminUserEntity'] | null; // AdminUserEntity
  }
  AdminUserEntityResponseCollection: { // root type
    data: NexusGenRootTypes['AdminUserEntity'][]; // [AdminUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Category: { // root type
    _id: string; // ID!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    name?: string | null; // String
    published_at?: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  CategoryEntity: { // root type
    attributes?: NexusGenRootTypes['Category'] | null; // Category
    id?: string | null; // ID
  }
  CategoryEntityResponse: { // root type
    data?: NexusGenRootTypes['CategoryEntity'] | null; // CategoryEntity
  }
  CategoryEntityResponseCollection: { // root type
    data: NexusGenRootTypes['CategoryEntity'][]; // [CategoryEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  ComponentBlogTestComo: { // root type
    _id: string; // ID!
    id: string; // ID!
    name?: string | null; // String
  }
  ComponentDefaultClosingperiod: { // root type
    _id: string; // ID!
    dish?: NexusGenRootTypes['ComponentDefaultDish'] | null; // ComponentDefaultDish
    end_date: NexusGenScalars['Date']; // Date!
    id: string; // ID!
    label?: string | null; // String
    start_date: NexusGenScalars['Date']; // Date!
  }
  ComponentDefaultDish: { // root type
    _id: string; // ID!
    id: string; // ID!
    name?: string | null; // String
    price?: number | null; // Float
  }
  ComponentDefaultOpeningtimes: { // root type
    _id: string; // ID!
    dishrep?: Array<NexusGenRootTypes['ComponentDefaultDish'] | null> | null; // [ComponentDefaultDish]
    id: string; // ID!
    label: string; // String!
    time?: string | null; // String
  }
  ComponentDefaultRestaurantservice: { // root type
    _id: string; // ID!
    id: string; // ID!
    is_available: boolean; // Boolean!
    name: string; // String!
  }
  Country: { // root type
    _id: string; // ID!
    code?: string | null; // String
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    name: string; // String!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  CountryEntity: { // root type
    attributes?: NexusGenRootTypes['Country'] | null; // Country
    id?: string | null; // ID
  }
  CountryEntityResponse: { // root type
    data?: NexusGenRootTypes['CountryEntity'] | null; // CountryEntity
  }
  CountryEntityResponseCollection: { // root type
    data: NexusGenRootTypes['CountryEntity'][]; // [CountryEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Homepage: { // root type
    _id: string; // ID!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    locale?: string | null; // String
    published_at?: NexusGenScalars['DateTime'] | null; // DateTime
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  HomepageEntity: { // root type
    attributes?: NexusGenRootTypes['Homepage'] | null; // Homepage
    id?: string | null; // ID
  }
  HomepageEntityResponse: { // root type
    data?: NexusGenRootTypes['HomepageEntity'] | null; // HomepageEntity
  }
  I18NLocale: { // root type
    _id: string; // ID!
    code?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    name?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  I18NLocaleEntity: { // root type
    attributes?: NexusGenRootTypes['I18NLocale'] | null; // I18NLocale
    id?: string | null; // ID
  }
  I18NLocaleEntityResponse: { // root type
    data?: NexusGenRootTypes['I18NLocaleEntity'] | null; // I18NLocaleEntity
  }
  I18NLocaleEntityResponseCollection: { // root type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Like: { // root type
    _id: string; // ID!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  LikeEntity: { // root type
    attributes?: NexusGenRootTypes['Like'] | null; // Like
    id?: string | null; // ID
  }
  LikeEntityResponse: { // root type
    data?: NexusGenRootTypes['LikeEntity'] | null; // LikeEntity
  }
  LikeEntityResponseCollection: { // root type
    data: NexusGenRootTypes['LikeEntity'][]; // [LikeEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Menu: { // root type
    _id: string; // ID!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MenuEntity: { // root type
    attributes?: NexusGenRootTypes['Menu'] | null; // Menu
    id?: string | null; // ID
  }
  MenuEntityResponse: { // root type
    data?: NexusGenRootTypes['MenuEntity'] | null; // MenuEntity
  }
  MenuEntityResponseCollection: { // root type
    data: NexusGenRootTypes['MenuEntity'][]; // [MenuEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Menusection: { // root type
    _id: string; // ID!
    created_at: NexusGenScalars['DateTime']; // DateTime!
    dishes: Array<NexusGenRootTypes['ComponentDefaultDish'] | null>; // [ComponentDefaultDish]!
    id: string; // ID!
    name: string; // String!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  MenusectionEntity: { // root type
    attributes?: NexusGenRootTypes['Menusection'] | null; // Menusection
    id?: string | null; // ID
  }
  MenusectionEntityResponse: { // root type
    data?: NexusGenRootTypes['MenusectionEntity'] | null; // MenusectionEntity
  }
  MenusectionEntityResponseCollection: { // root type
    data: NexusGenRootTypes['MenusectionEntity'][]; // [MenusectionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  MypluginTest: { // root type
    _id: string; // ID!
    id: string; // ID!
    type: string; // String!
  }
  MypluginTestEntity: { // root type
    attributes?: NexusGenRootTypes['MypluginTest'] | null; // MypluginTest
    id?: string | null; // ID
  }
  MypluginTestEntityResponse: { // root type
    data?: NexusGenRootTypes['MypluginTestEntity'] | null; // MypluginTestEntity
  }
  MypluginTestEntityResponseCollection: { // root type
    data: NexusGenRootTypes['MypluginTestEntity'][]; // [MypluginTestEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Pagination: {};
  Query: {};
  ResponseCollectionMeta: { // root type
    pagination: NexusGenRootTypes['Pagination']; // Pagination!
  }
  Restaurant: { // root type
    _id: string; // ID!
    averagePrice?: number | null; // Float
    closing_period?: NexusGenRootTypes['ComponentDefaultClosingperiod'] | null; // ComponentDefaultClosingperiod
    created_at: NexusGenScalars['DateTime']; // DateTime!
    dz?: NexusGenRootTypes['restaurantDzDynamicZone'] | null; // restaurantDzDynamicZone
    id: string; // ID!
    locale?: string | null; // String
    name: string; // String!
    opening_times?: Array<NexusGenRootTypes['ComponentDefaultOpeningtimes'] | null> | null; // [ComponentDefaultOpeningtimes]
    price_range?: NexusGenEnums['ENUM_RESTAURANT_PRICE_RANGE'] | null; // ENUM_RESTAURANT_PRICE_RANGE
    published_at?: NexusGenScalars['DateTime'] | null; // DateTime
    services?: Array<NexusGenRootTypes['ComponentDefaultRestaurantservice'] | null> | null; // [ComponentDefaultRestaurantservice]
    since?: NexusGenScalars['Date'] | null; // Date
    stars: number; // Int!
    timestamp?: NexusGenScalars['DateTime'] | null; // DateTime
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  RestaurantEntity: { // root type
    attributes?: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    id?: string | null; // ID
  }
  RestaurantEntityResponse: { // root type
    data?: NexusGenRootTypes['RestaurantEntity'] | null; // RestaurantEntity
  }
  RestaurantEntityResponseCollection: { // root type
    data: NexusGenRootTypes['RestaurantEntity'][]; // [RestaurantEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Review: { // root type
    _id: string; // ID!
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    rating: number; // Int!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  ReviewEntity: { // root type
    attributes?: NexusGenRootTypes['Review'] | null; // Review
    id?: string | null; // ID
  }
  ReviewEntityResponse: { // root type
    data?: NexusGenRootTypes['ReviewEntity'] | null; // ReviewEntity
  }
  ReviewEntityResponseCollection: { // root type
    data: NexusGenRootTypes['ReviewEntity'][]; // [ReviewEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFile: { // root type
    _id: string; // ID!
    alternativeText?: string | null; // String
    caption?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    ext?: string | null; // String
    formats?: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height?: number | null; // Int
    id: string; // ID!
    mime: string; // String!
    name: string; // String!
    previewUrl?: string | null; // String
    provider: string; // String!
    provider_metadata?: NexusGenScalars['JSON'] | null; // JSON
    size: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    url: string; // String!
    width?: number | null; // Int
  }
  UploadFileEntity: { // root type
    attributes?: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    id?: string | null; // ID
  }
  UploadFileEntityResponse: { // root type
    data?: NexusGenRootTypes['UploadFileEntity'] | null; // UploadFileEntity
  }
  UploadFileEntityResponseCollection: { // root type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsPermission: { // root type
    _id: string; // ID!
    action: string; // String!
    controller: string; // String!
    enabled: boolean; // Boolean!
    id: string; // ID!
    policy?: string | null; // String
    type: string; // String!
  }
  UsersPermissionsPermissionEntity: { // root type
    attributes?: NexusGenRootTypes['UsersPermissionsPermission'] | null; // UsersPermissionsPermission
    id?: string | null; // ID
  }
  UsersPermissionsPermissionEntityResponse: { // root type
    data?: NexusGenRootTypes['UsersPermissionsPermissionEntity'] | null; // UsersPermissionsPermissionEntity
  }
  UsersPermissionsPermissionEntityResponseCollection: { // root type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsRole: { // root type
    _id: string; // ID!
    description?: string | null; // String
    id: string; // ID!
    name: string; // String!
    type?: string | null; // String
  }
  UsersPermissionsRoleEntity: { // root type
    attributes?: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    id?: string | null; // ID
  }
  UsersPermissionsRoleEntityResponse: { // root type
    data?: NexusGenRootTypes['UsersPermissionsRoleEntity'] | null; // UsersPermissionsRoleEntity
  }
  UsersPermissionsRoleEntityResponseCollection: { // root type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsUser: { // root type
    _id: string; // ID!
    blocked?: boolean | null; // Boolean
    confirmed?: boolean | null; // Boolean
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    provider?: string | null; // String
    updated_at: NexusGenScalars['DateTime']; // DateTime!
    username: string; // String!
  }
  UsersPermissionsUserEntity: { // root type
    attributes?: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    id?: string | null; // ID
  }
  UsersPermissionsUserEntityResponse: { // root type
    data?: NexusGenRootTypes['UsersPermissionsUserEntity'] | null; // UsersPermissionsUserEntity
  }
  UsersPermissionsUserEntityResponseCollection: { // root type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
  restaurantDzDynamicZone: NexusGenRootTypes['ComponentDefaultClosingperiod'] | NexusGenRootTypes['ComponentDefaultDish'] | NexusGenRootTypes['ComponentDefaultOpeningtimes'] | NexusGenRootTypes['ComponentDefaultRestaurantservice'];
}

export type NexusGenRootTypes = NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Address: { // field return type
    _id: string; // ID!
    city: string; // String!
    cover: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    json: NexusGenScalars['JSON'] | null; // JSON
    postal_coder: string | null; // String
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  AddressEntity: { // field return type
    attributes: NexusGenRootTypes['Address'] | null; // Address
    id: string | null; // ID
  }
  AddressEntityResponse: { // field return type
    data: NexusGenRootTypes['AddressEntity'] | null; // AddressEntity
  }
  AddressEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['AddressEntity'][]; // [AddressEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  AdminPermission: { // field return type
    _id: string; // ID!
    action: string; // String!
    conditions: NexusGenScalars['JSON'] | null; // JSON
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    properties: NexusGenScalars['JSON'] | null; // JSON
    role: NexusGenRootTypes['AdminRole'] | null; // AdminRole
    subject: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AdminPermissionEntity: { // field return type
    attributes: NexusGenRootTypes['AdminPermission'] | null; // AdminPermission
    id: string | null; // ID
  }
  AdminPermissionEntityResponse: { // field return type
    data: NexusGenRootTypes['AdminPermissionEntity'] | null; // AdminPermissionEntity
  }
  AdminPermissionEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['AdminPermissionEntity'][]; // [AdminPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  AdminRole: { // field return type
    _id: string; // ID!
    code: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    description: string | null; // String
    id: string; // ID!
    name: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  AdminRoleEntity: { // field return type
    attributes: NexusGenRootTypes['AdminRole'] | null; // AdminRole
    id: string | null; // ID
  }
  AdminRoleEntityResponse: { // field return type
    data: NexusGenRootTypes['AdminRoleEntity'] | null; // AdminRoleEntity
  }
  AdminRoleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['AdminRoleEntity'][]; // [AdminRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  AdminUser: { // field return type
    _id: string; // ID!
    firstname: string | null; // String
    id: string; // ID!
    lastname: string | null; // String
    preferedLanguage: string | null; // String
    username: string | null; // String
  }
  AdminUserEntity: { // field return type
    attributes: NexusGenRootTypes['AdminUser'] | null; // AdminUser
    id: string | null; // ID
  }
  AdminUserEntityResponse: { // field return type
    data: NexusGenRootTypes['AdminUserEntity'] | null; // AdminUserEntity
  }
  AdminUserEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['AdminUserEntity'][]; // [AdminUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Category: { // field return type
    _id: string; // ID!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    name: string | null; // String
    published_at: NexusGenScalars['DateTime'] | null; // DateTime
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  CategoryEntity: { // field return type
    attributes: NexusGenRootTypes['Category'] | null; // Category
    id: string | null; // ID
  }
  CategoryEntityResponse: { // field return type
    data: NexusGenRootTypes['CategoryEntity'] | null; // CategoryEntity
  }
  CategoryEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['CategoryEntity'][]; // [CategoryEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  ComponentBlogTestComo: { // field return type
    _id: string; // ID!
    id: string; // ID!
    name: string | null; // String
  }
  ComponentDefaultClosingperiod: { // field return type
    _id: string; // ID!
    dish: NexusGenRootTypes['ComponentDefaultDish'] | null; // ComponentDefaultDish
    end_date: NexusGenScalars['Date']; // Date!
    id: string; // ID!
    label: string | null; // String
    media: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    start_date: NexusGenScalars['Date']; // Date!
  }
  ComponentDefaultDish: { // field return type
    _id: string; // ID!
    id: string; // ID!
    name: string | null; // String
    picture: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    price: number | null; // Float
  }
  ComponentDefaultOpeningtimes: { // field return type
    _id: string; // ID!
    dishrep: Array<NexusGenRootTypes['ComponentDefaultDish'] | null> | null; // [ComponentDefaultDish]
    id: string; // ID!
    label: string; // String!
    time: string | null; // String
  }
  ComponentDefaultRestaurantservice: { // field return type
    _id: string; // ID!
    id: string; // ID!
    is_available: boolean; // Boolean!
    media: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    name: string; // String!
  }
  Country: { // field return type
    _id: string; // ID!
    code: string | null; // String
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    name: string; // String!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  CountryEntity: { // field return type
    attributes: NexusGenRootTypes['Country'] | null; // Country
    id: string | null; // ID
  }
  CountryEntityResponse: { // field return type
    data: NexusGenRootTypes['CountryEntity'] | null; // CountryEntity
  }
  CountryEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['CountryEntity'][]; // [CountryEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Homepage: { // field return type
    _id: string; // ID!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    locale: string | null; // String
    published_at: NexusGenScalars['DateTime'] | null; // DateTime
    single: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    title: string; // String!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  HomepageEntity: { // field return type
    attributes: NexusGenRootTypes['Homepage'] | null; // Homepage
    id: string | null; // ID
  }
  HomepageEntityResponse: { // field return type
    data: NexusGenRootTypes['HomepageEntity'] | null; // HomepageEntity
  }
  I18NLocale: { // field return type
    _id: string; // ID!
    code: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    name: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  I18NLocaleEntity: { // field return type
    attributes: NexusGenRootTypes['I18NLocale'] | null; // I18NLocale
    id: string | null; // ID
  }
  I18NLocaleEntityResponse: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'] | null; // I18NLocaleEntity
  }
  I18NLocaleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['I18NLocaleEntity'][]; // [I18NLocaleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Like: { // field return type
    _id: string; // ID!
    address: NexusGenRootTypes['Address'] | null; // Address
    authore: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    review: NexusGenRootTypes['Review'] | null; // Review
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  LikeEntity: { // field return type
    attributes: NexusGenRootTypes['Like'] | null; // Like
    id: string | null; // ID
  }
  LikeEntityResponse: { // field return type
    data: NexusGenRootTypes['LikeEntity'] | null; // LikeEntity
  }
  LikeEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['LikeEntity'][]; // [LikeEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Menu: { // field return type
    _id: string; // ID!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    restaurant: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  MenuEntity: { // field return type
    attributes: NexusGenRootTypes['Menu'] | null; // Menu
    id: string | null; // ID
  }
  MenuEntityResponse: { // field return type
    data: NexusGenRootTypes['MenuEntity'] | null; // MenuEntity
  }
  MenuEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['MenuEntity'][]; // [MenuEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Menusection: { // field return type
    _id: string; // ID!
    created_at: NexusGenScalars['DateTime']; // DateTime!
    dishes: Array<NexusGenRootTypes['ComponentDefaultDish'] | null>; // [ComponentDefaultDish]!
    id: string; // ID!
    menu: NexusGenRootTypes['Menu'] | null; // Menu
    name: string; // String!
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  MenusectionEntity: { // field return type
    attributes: NexusGenRootTypes['Menusection'] | null; // Menusection
    id: string | null; // ID
  }
  MenusectionEntityResponse: { // field return type
    data: NexusGenRootTypes['MenusectionEntity'] | null; // MenusectionEntity
  }
  MenusectionEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['MenusectionEntity'][]; // [MenusectionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  MypluginTest: { // field return type
    _id: string; // ID!
    id: string; // ID!
    type: string; // String!
  }
  MypluginTestEntity: { // field return type
    attributes: NexusGenRootTypes['MypluginTest'] | null; // MypluginTest
    id: string | null; // ID
  }
  MypluginTestEntityResponse: { // field return type
    data: NexusGenRootTypes['MypluginTestEntity'] | null; // MypluginTestEntity
  }
  MypluginTestEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['MypluginTestEntity'][]; // [MypluginTestEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Pagination: { // field return type
    page: number; // Int!
    pageCount: number; // Int!
    pageSize: number; // Int!
    total: number; // Int!
  }
  Query: { // field return type
    addressEntities: NexusGenRootTypes['AddressEntityResponseCollection'] | null; // AddressEntityResponseCollection
    addressEntity: NexusGenRootTypes['AddressEntityResponse'] | null; // AddressEntityResponse
    categoryEntities: NexusGenRootTypes['CategoryEntityResponseCollection'] | null; // CategoryEntityResponseCollection
    categoryEntity: NexusGenRootTypes['CategoryEntityResponse'] | null; // CategoryEntityResponse
    countryEntities: NexusGenRootTypes['CountryEntityResponseCollection'] | null; // CountryEntityResponseCollection
    countryEntity: NexusGenRootTypes['CountryEntityResponse'] | null; // CountryEntityResponse
    homepageEntity: NexusGenRootTypes['HomepageEntityResponse'] | null; // HomepageEntityResponse
    likeEntities: NexusGenRootTypes['LikeEntityResponseCollection'] | null; // LikeEntityResponseCollection
    likeEntity: NexusGenRootTypes['LikeEntityResponse'] | null; // LikeEntityResponse
    menuEntities: NexusGenRootTypes['MenuEntityResponseCollection'] | null; // MenuEntityResponseCollection
    menuEntity: NexusGenRootTypes['MenuEntityResponse'] | null; // MenuEntityResponse
    menusectionEntities: NexusGenRootTypes['MenusectionEntityResponseCollection'] | null; // MenusectionEntityResponseCollection
    menusectionEntity: NexusGenRootTypes['MenusectionEntityResponse'] | null; // MenusectionEntityResponse
    mypluginTestEntities: NexusGenRootTypes['MypluginTestEntityResponseCollection'] | null; // MypluginTestEntityResponseCollection
    mypluginTestEntity: NexusGenRootTypes['MypluginTestEntityResponse'] | null; // MypluginTestEntityResponse
    restaurantEntities: NexusGenRootTypes['RestaurantEntityResponseCollection'] | null; // RestaurantEntityResponseCollection
    restaurantEntity: NexusGenRootTypes['RestaurantEntityResponse'] | null; // RestaurantEntityResponse
    reviewEntities: NexusGenRootTypes['ReviewEntityResponseCollection'] | null; // ReviewEntityResponseCollection
    reviewEntity: NexusGenRootTypes['ReviewEntityResponse'] | null; // ReviewEntityResponse
    usersPermissionsUserEntities: NexusGenRootTypes['UsersPermissionsUserEntityResponseCollection'] | null; // UsersPermissionsUserEntityResponseCollection
    usersPermissionsUserEntity: NexusGenRootTypes['UsersPermissionsUserEntityResponse'] | null; // UsersPermissionsUserEntityResponse
  }
  ResponseCollectionMeta: { // field return type
    pagination: NexusGenRootTypes['Pagination']; // Pagination!
  }
  Restaurant: { // field return type
    _id: string; // ID!
    address: NexusGenRootTypes['Address'] | null; // Address
    averagePrice: number | null; // Float
    closing_period: NexusGenRootTypes['ComponentDefaultClosingperiod'] | null; // ComponentDefaultClosingperiod
    cover: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    created_at: NexusGenScalars['DateTime']; // DateTime!
    dz: NexusGenRootTypes['restaurantDzDynamicZone'] | null; // restaurantDzDynamicZone
    id: string; // ID!
    locale: string | null; // String
    menu: NexusGenRootTypes['Menu'] | null; // Menu
    name: string; // String!
    opening_times: Array<NexusGenRootTypes['ComponentDefaultOpeningtimes'] | null> | null; // [ComponentDefaultOpeningtimes]
    price_range: NexusGenEnums['ENUM_RESTAURANT_PRICE_RANGE'] | null; // ENUM_RESTAURANT_PRICE_RANGE
    published_at: NexusGenScalars['DateTime'] | null; // DateTime
    services: Array<NexusGenRootTypes['ComponentDefaultRestaurantservice'] | null> | null; // [ComponentDefaultRestaurantservice]
    since: NexusGenScalars['Date'] | null; // Date
    stars: number; // Int!
    timestamp: NexusGenScalars['DateTime'] | null; // DateTime
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  RestaurantEntity: { // field return type
    attributes: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    id: string | null; // ID
  }
  RestaurantEntityResponse: { // field return type
    data: NexusGenRootTypes['RestaurantEntity'] | null; // RestaurantEntity
  }
  RestaurantEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['RestaurantEntity'][]; // [RestaurantEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  Review: { // field return type
    _id: string; // ID!
    author: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    rating: number; // Int!
    restaurant: NexusGenRootTypes['Restaurant'] | null; // Restaurant
    updated_at: NexusGenScalars['DateTime']; // DateTime!
  }
  ReviewEntity: { // field return type
    attributes: NexusGenRootTypes['Review'] | null; // Review
    id: string | null; // ID
  }
  ReviewEntityResponse: { // field return type
    data: NexusGenRootTypes['ReviewEntity'] | null; // ReviewEntity
  }
  ReviewEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['ReviewEntity'][]; // [ReviewEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UploadFile: { // field return type
    _id: string; // ID!
    alternativeText: string | null; // String
    caption: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    ext: string | null; // String
    formats: NexusGenScalars['JSON'] | null; // JSON
    hash: string; // String!
    height: number | null; // Int
    id: string; // ID!
    mime: string; // String!
    name: string; // String!
    previewUrl: string | null; // String
    provider: string; // String!
    provider_metadata: NexusGenScalars['JSON'] | null; // JSON
    size: number; // Float!
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    url: string; // String!
    width: number | null; // Int
  }
  UploadFileEntity: { // field return type
    attributes: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    id: string | null; // ID
  }
  UploadFileEntityResponse: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'] | null; // UploadFileEntity
  }
  UploadFileEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UploadFileEntity'][]; // [UploadFileEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsPermission: { // field return type
    _id: string; // ID!
    action: string; // String!
    controller: string; // String!
    enabled: boolean; // Boolean!
    id: string; // ID!
    policy: string | null; // String
    role: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    type: string; // String!
  }
  UsersPermissionsPermissionEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsPermission'] | null; // UsersPermissionsPermission
    id: string | null; // ID
  }
  UsersPermissionsPermissionEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'] | null; // UsersPermissionsPermissionEntity
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsPermissionEntity'][]; // [UsersPermissionsPermissionEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsRole: { // field return type
    _id: string; // ID!
    description: string | null; // String
    id: string; // ID!
    name: string; // String!
    type: string | null; // String
  }
  UsersPermissionsRoleEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    id: string | null; // ID
  }
  UsersPermissionsRoleEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'] | null; // UsersPermissionsRoleEntity
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsRoleEntity'][]; // [UsersPermissionsRoleEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
  UsersPermissionsUser: { // field return type
    _id: string; // ID!
    blocked: boolean | null; // Boolean
    confirmed: boolean | null; // Boolean
    created_at: NexusGenScalars['DateTime']; // DateTime!
    id: string; // ID!
    picture: NexusGenRootTypes['UploadFile'] | null; // UploadFile
    provider: string | null; // String
    role: NexusGenRootTypes['UsersPermissionsRole'] | null; // UsersPermissionsRole
    updated_at: NexusGenScalars['DateTime']; // DateTime!
    username: string; // String!
  }
  UsersPermissionsUserEntity: { // field return type
    attributes: NexusGenRootTypes['UsersPermissionsUser'] | null; // UsersPermissionsUser
    id: string | null; // ID
  }
  UsersPermissionsUserEntityResponse: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'] | null; // UsersPermissionsUserEntity
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type
    data: NexusGenRootTypes['UsersPermissionsUserEntity'][]; // [UsersPermissionsUserEntity!]!
    meta: NexusGenRootTypes['ResponseCollectionMeta']; // ResponseCollectionMeta!
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    _id: 'ID'
    city: 'String'
    cover: 'UploadFile'
    created_at: 'DateTime'
    id: 'ID'
    json: 'JSON'
    postal_coder: 'String'
    updated_at: 'DateTime'
  }
  AddressEntity: { // field return type name
    attributes: 'Address'
    id: 'ID'
  }
  AddressEntityResponse: { // field return type name
    data: 'AddressEntity'
  }
  AddressEntityResponseCollection: { // field return type name
    data: 'AddressEntity'
    meta: 'ResponseCollectionMeta'
  }
  AdminPermission: { // field return type name
    _id: 'ID'
    action: 'String'
    conditions: 'JSON'
    createdAt: 'DateTime'
    id: 'ID'
    properties: 'JSON'
    role: 'AdminRole'
    subject: 'String'
    updatedAt: 'DateTime'
  }
  AdminPermissionEntity: { // field return type name
    attributes: 'AdminPermission'
    id: 'ID'
  }
  AdminPermissionEntityResponse: { // field return type name
    data: 'AdminPermissionEntity'
  }
  AdminPermissionEntityResponseCollection: { // field return type name
    data: 'AdminPermissionEntity'
    meta: 'ResponseCollectionMeta'
  }
  AdminRole: { // field return type name
    _id: 'ID'
    code: 'String'
    createdAt: 'DateTime'
    description: 'String'
    id: 'ID'
    name: 'String'
    updatedAt: 'DateTime'
  }
  AdminRoleEntity: { // field return type name
    attributes: 'AdminRole'
    id: 'ID'
  }
  AdminRoleEntityResponse: { // field return type name
    data: 'AdminRoleEntity'
  }
  AdminRoleEntityResponseCollection: { // field return type name
    data: 'AdminRoleEntity'
    meta: 'ResponseCollectionMeta'
  }
  AdminUser: { // field return type name
    _id: 'ID'
    firstname: 'String'
    id: 'ID'
    lastname: 'String'
    preferedLanguage: 'String'
    username: 'String'
  }
  AdminUserEntity: { // field return type name
    attributes: 'AdminUser'
    id: 'ID'
  }
  AdminUserEntityResponse: { // field return type name
    data: 'AdminUserEntity'
  }
  AdminUserEntityResponseCollection: { // field return type name
    data: 'AdminUserEntity'
    meta: 'ResponseCollectionMeta'
  }
  Category: { // field return type name
    _id: 'ID'
    createdAt: 'DateTime'
    id: 'ID'
    name: 'String'
    published_at: 'DateTime'
    updatedAt: 'DateTime'
  }
  CategoryEntity: { // field return type name
    attributes: 'Category'
    id: 'ID'
  }
  CategoryEntityResponse: { // field return type name
    data: 'CategoryEntity'
  }
  CategoryEntityResponseCollection: { // field return type name
    data: 'CategoryEntity'
    meta: 'ResponseCollectionMeta'
  }
  ComponentBlogTestComo: { // field return type name
    _id: 'ID'
    id: 'ID'
    name: 'String'
  }
  ComponentDefaultClosingperiod: { // field return type name
    _id: 'ID'
    dish: 'ComponentDefaultDish'
    end_date: 'Date'
    id: 'ID'
    label: 'String'
    media: 'UploadFile'
    start_date: 'Date'
  }
  ComponentDefaultDish: { // field return type name
    _id: 'ID'
    id: 'ID'
    name: 'String'
    picture: 'UploadFile'
    price: 'Float'
  }
  ComponentDefaultOpeningtimes: { // field return type name
    _id: 'ID'
    dishrep: 'ComponentDefaultDish'
    id: 'ID'
    label: 'String'
    time: 'String'
  }
  ComponentDefaultRestaurantservice: { // field return type name
    _id: 'ID'
    id: 'ID'
    is_available: 'Boolean'
    media: 'UploadFile'
    name: 'String'
  }
  Country: { // field return type name
    _id: 'ID'
    code: 'String'
    created_at: 'DateTime'
    id: 'ID'
    name: 'String'
    updated_at: 'DateTime'
  }
  CountryEntity: { // field return type name
    attributes: 'Country'
    id: 'ID'
  }
  CountryEntityResponse: { // field return type name
    data: 'CountryEntity'
  }
  CountryEntityResponseCollection: { // field return type name
    data: 'CountryEntity'
    meta: 'ResponseCollectionMeta'
  }
  Homepage: { // field return type name
    _id: 'ID'
    createdAt: 'DateTime'
    id: 'ID'
    locale: 'String'
    published_at: 'DateTime'
    single: 'UploadFile'
    title: 'String'
    updatedAt: 'DateTime'
  }
  HomepageEntity: { // field return type name
    attributes: 'Homepage'
    id: 'ID'
  }
  HomepageEntityResponse: { // field return type name
    data: 'HomepageEntity'
  }
  I18NLocale: { // field return type name
    _id: 'ID'
    code: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    name: 'String'
    updatedAt: 'DateTime'
  }
  I18NLocaleEntity: { // field return type name
    attributes: 'I18NLocale'
    id: 'ID'
  }
  I18NLocaleEntityResponse: { // field return type name
    data: 'I18NLocaleEntity'
  }
  I18NLocaleEntityResponseCollection: { // field return type name
    data: 'I18NLocaleEntity'
    meta: 'ResponseCollectionMeta'
  }
  Like: { // field return type name
    _id: 'ID'
    address: 'Address'
    authore: 'UsersPermissionsUser'
    createdAt: 'DateTime'
    id: 'ID'
    review: 'Review'
    updatedAt: 'DateTime'
  }
  LikeEntity: { // field return type name
    attributes: 'Like'
    id: 'ID'
  }
  LikeEntityResponse: { // field return type name
    data: 'LikeEntity'
  }
  LikeEntityResponseCollection: { // field return type name
    data: 'LikeEntity'
    meta: 'ResponseCollectionMeta'
  }
  Menu: { // field return type name
    _id: 'ID'
    createdAt: 'DateTime'
    id: 'ID'
    restaurant: 'Restaurant'
    updatedAt: 'DateTime'
  }
  MenuEntity: { // field return type name
    attributes: 'Menu'
    id: 'ID'
  }
  MenuEntityResponse: { // field return type name
    data: 'MenuEntity'
  }
  MenuEntityResponseCollection: { // field return type name
    data: 'MenuEntity'
    meta: 'ResponseCollectionMeta'
  }
  Menusection: { // field return type name
    _id: 'ID'
    created_at: 'DateTime'
    dishes: 'ComponentDefaultDish'
    id: 'ID'
    menu: 'Menu'
    name: 'String'
    updated_at: 'DateTime'
  }
  MenusectionEntity: { // field return type name
    attributes: 'Menusection'
    id: 'ID'
  }
  MenusectionEntityResponse: { // field return type name
    data: 'MenusectionEntity'
  }
  MenusectionEntityResponseCollection: { // field return type name
    data: 'MenusectionEntity'
    meta: 'ResponseCollectionMeta'
  }
  MypluginTest: { // field return type name
    _id: 'ID'
    id: 'ID'
    type: 'String'
  }
  MypluginTestEntity: { // field return type name
    attributes: 'MypluginTest'
    id: 'ID'
  }
  MypluginTestEntityResponse: { // field return type name
    data: 'MypluginTestEntity'
  }
  MypluginTestEntityResponseCollection: { // field return type name
    data: 'MypluginTestEntity'
    meta: 'ResponseCollectionMeta'
  }
  Pagination: { // field return type name
    page: 'Int'
    pageCount: 'Int'
    pageSize: 'Int'
    total: 'Int'
  }
  Query: { // field return type name
    addressEntities: 'AddressEntityResponseCollection'
    addressEntity: 'AddressEntityResponse'
    categoryEntities: 'CategoryEntityResponseCollection'
    categoryEntity: 'CategoryEntityResponse'
    countryEntities: 'CountryEntityResponseCollection'
    countryEntity: 'CountryEntityResponse'
    homepageEntity: 'HomepageEntityResponse'
    likeEntities: 'LikeEntityResponseCollection'
    likeEntity: 'LikeEntityResponse'
    menuEntities: 'MenuEntityResponseCollection'
    menuEntity: 'MenuEntityResponse'
    menusectionEntities: 'MenusectionEntityResponseCollection'
    menusectionEntity: 'MenusectionEntityResponse'
    mypluginTestEntities: 'MypluginTestEntityResponseCollection'
    mypluginTestEntity: 'MypluginTestEntityResponse'
    restaurantEntities: 'RestaurantEntityResponseCollection'
    restaurantEntity: 'RestaurantEntityResponse'
    reviewEntities: 'ReviewEntityResponseCollection'
    reviewEntity: 'ReviewEntityResponse'
    usersPermissionsUserEntities: 'UsersPermissionsUserEntityResponseCollection'
    usersPermissionsUserEntity: 'UsersPermissionsUserEntityResponse'
  }
  ResponseCollectionMeta: { // field return type name
    pagination: 'Pagination'
  }
  Restaurant: { // field return type name
    _id: 'ID'
    address: 'Address'
    averagePrice: 'Float'
    closing_period: 'ComponentDefaultClosingperiod'
    cover: 'UploadFile'
    created_at: 'DateTime'
    dz: 'restaurantDzDynamicZone'
    id: 'ID'
    locale: 'String'
    menu: 'Menu'
    name: 'String'
    opening_times: 'ComponentDefaultOpeningtimes'
    price_range: 'ENUM_RESTAURANT_PRICE_RANGE'
    published_at: 'DateTime'
    services: 'ComponentDefaultRestaurantservice'
    since: 'Date'
    stars: 'Int'
    timestamp: 'DateTime'
    updated_at: 'DateTime'
  }
  RestaurantEntity: { // field return type name
    attributes: 'Restaurant'
    id: 'ID'
  }
  RestaurantEntityResponse: { // field return type name
    data: 'RestaurantEntity'
  }
  RestaurantEntityResponseCollection: { // field return type name
    data: 'RestaurantEntity'
    meta: 'ResponseCollectionMeta'
  }
  Review: { // field return type name
    _id: 'ID'
    author: 'UsersPermissionsUser'
    created_at: 'DateTime'
    id: 'ID'
    rating: 'Int'
    restaurant: 'Restaurant'
    updated_at: 'DateTime'
  }
  ReviewEntity: { // field return type name
    attributes: 'Review'
    id: 'ID'
  }
  ReviewEntityResponse: { // field return type name
    data: 'ReviewEntity'
  }
  ReviewEntityResponseCollection: { // field return type name
    data: 'ReviewEntity'
    meta: 'ResponseCollectionMeta'
  }
  UploadFile: { // field return type name
    _id: 'ID'
    alternativeText: 'String'
    caption: 'String'
    createdAt: 'DateTime'
    ext: 'String'
    formats: 'JSON'
    hash: 'String'
    height: 'Int'
    id: 'ID'
    mime: 'String'
    name: 'String'
    previewUrl: 'String'
    provider: 'String'
    provider_metadata: 'JSON'
    size: 'Float'
    updatedAt: 'DateTime'
    url: 'String'
    width: 'Int'
  }
  UploadFileEntity: { // field return type name
    attributes: 'UploadFile'
    id: 'ID'
  }
  UploadFileEntityResponse: { // field return type name
    data: 'UploadFileEntity'
  }
  UploadFileEntityResponseCollection: { // field return type name
    data: 'UploadFileEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsPermission: { // field return type name
    _id: 'ID'
    action: 'String'
    controller: 'String'
    enabled: 'Boolean'
    id: 'ID'
    policy: 'String'
    role: 'UsersPermissionsRole'
    type: 'String'
  }
  UsersPermissionsPermissionEntity: { // field return type name
    attributes: 'UsersPermissionsPermission'
    id: 'ID'
  }
  UsersPermissionsPermissionEntityResponse: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
  }
  UsersPermissionsPermissionEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsPermissionEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsRole: { // field return type name
    _id: 'ID'
    description: 'String'
    id: 'ID'
    name: 'String'
    type: 'String'
  }
  UsersPermissionsRoleEntity: { // field return type name
    attributes: 'UsersPermissionsRole'
    id: 'ID'
  }
  UsersPermissionsRoleEntityResponse: { // field return type name
    data: 'UsersPermissionsRoleEntity'
  }
  UsersPermissionsRoleEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsRoleEntity'
    meta: 'ResponseCollectionMeta'
  }
  UsersPermissionsUser: { // field return type name
    _id: 'ID'
    blocked: 'Boolean'
    confirmed: 'Boolean'
    created_at: 'DateTime'
    id: 'ID'
    picture: 'UploadFile'
    provider: 'String'
    role: 'UsersPermissionsRole'
    updated_at: 'DateTime'
    username: 'String'
  }
  UsersPermissionsUserEntity: { // field return type name
    attributes: 'UsersPermissionsUser'
    id: 'ID'
  }
  UsersPermissionsUserEntityResponse: { // field return type name
    data: 'UsersPermissionsUserEntity'
  }
  UsersPermissionsUserEntityResponseCollection: { // field return type name
    data: 'UsersPermissionsUserEntity'
    meta: 'ResponseCollectionMeta'
  }
}

export interface NexusGenArgTypes {
  Query: {
    addressEntities: { // args
      filters?: NexusGenInputs['AddressFiltersInput'] | null; // AddressFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    addressEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    categoryEntities: { // args
      filters?: NexusGenInputs['CategoryFiltersInput'] | null; // CategoryFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    categoryEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    countryEntities: { // args
      filters?: NexusGenInputs['CountryFiltersInput'] | null; // CountryFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    countryEntity: { // args
      code?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    homepageEntity: { // args
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
    }
    likeEntities: { // args
      filters?: NexusGenInputs['LikeFiltersInput'] | null; // LikeFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    likeEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    menuEntities: { // args
      filters?: NexusGenInputs['MenuFiltersInput'] | null; // MenuFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    menuEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    menusectionEntities: { // args
      filters?: NexusGenInputs['MenusectionFiltersInput'] | null; // MenusectionFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    menusectionEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    mypluginTestEntities: { // args
      filters?: NexusGenInputs['MypluginTestFiltersInput'] | null; // MypluginTestFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    mypluginTestEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
      type?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    }
    restaurantEntities: { // args
      filters?: NexusGenInputs['RestaurantFiltersInput'] | null; // RestaurantFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    restaurantEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    reviewEntities: { // args
      filters?: NexusGenInputs['ReviewFiltersInput'] | null; // ReviewFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    reviewEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
    }
    usersPermissionsUserEntities: { // args
      filters?: NexusGenInputs['UsersPermissionsUserFiltersInput'] | null; // UsersPermissionsUserFiltersInput
      locale?: string | null; // String
      publicationState: NexusGenEnums['PublicationState'] | null; // PublicationState
      sort: Array<string | null> | null; // [String]
    }
    usersPermissionsUserEntity: { // args
      id?: NexusGenInputs['IDFilterInput'] | null; // IDFilterInput
      username?: NexusGenInputs['StringFilterInput'] | null; // StringFilterInput
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  restaurantDzDynamicZone: "ComponentDefaultClosingperiod" | "ComponentDefaultDish" | "ComponentDefaultOpeningtimes" | "ComponentDefaultRestaurantservice"
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "restaurantDzDynamicZone";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}